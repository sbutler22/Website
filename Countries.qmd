---
title: "Countries 11/12/24"
editor: source
execute: 
  warning: false
  message: false
  
project:
  type: website
  output-dir: docs
---

```{r}
#| echo: false
library(tidyverse)
library(sf)
library(praise)
```

## the data
the data this week contains countries and their corresponding country codes, as well as the subdivisions (provinces, states, etc.) found in each.

```{r}

countries <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-12/countries.csv') %>%
  mutate(name = case_when(
    !is.na(common_name) ~ common_name,
    TRUE ~ name
  ))
country_subdivisions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-12/country_subdivisions.csv')
former_countries <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-12/former_countries.csv')
```

I want to count the number of subdivisions in each country and then plot them with a color gradient corresponding to the number of subdivisions

## map

```{r}
# count number of subdivisions for each country

num_subdiv <- country_subdivisions %>%
  count(alpha_2)

df_num_subdiv <- data.frame(num_subdiv)

# add to original data frame
countries <- countries %>%
  left_join(df_num_subdiv, by = "alpha_2")
```

```{r}
world <- map_data("world")

df_country_subdiv <- countries %>%
  select(name, n)

colnames(df_country_subdiv) <- c("region", "subdivisions")

# match country names between the two data sets
df_country_subdiv <- df_country_subdiv %>%
  mutate(region = case_when(
    region == "Russian Federation" ~ "Russia",
    region == "United States" ~ "USA",
    region == "Congo, The Democratic Republic of the" ~ "Democratic Republic of the Congo",
    region == "Côte d'Ivoire" ~ "Ivory Coast",
    region == "Türkiye" ~ "Turkey",
    region == "Congo" ~ "Republic of Congo",
    region == "Czechia" ~ "Czech Republic",
    TRUE ~ region
  ))

world <- world %>%
  left_join(df_country_subdiv, by = "region")
```

```{r}
world %>%
  ggplot() + 
  geom_map(map = world, 
    aes(long, lat, map_id = region, fill = subdivisions))

```




